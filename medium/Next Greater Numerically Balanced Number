"""
Problem: <Next Greater Numerically Balanced Number>
Platform: LeetCode
Difficulty: Medium 
Author: Santhosh
"""

from itertools import permutations

class Solution(object):
    def nextBeautifulNumber(self, n):
        nums = set()
        # consider digits 1..7 (digit d appears exactly d times)
        # any selection of these digits produces a multiset whose length = sum(d)
        # we only keep those with total length <= 7 (practical bound)
        for mask in range(1, 1 << 7):  # masks over digits 1..7
            mult = []
            total_len = 0
            for i in range(7):
                if (mask >> i) & 1:
                    d = i + 1
                    total_len += d
                    # append digit d, d times
                    mult += [str(d)] * d
            if total_len == 0 or total_len > 7:
                continue
            # generate unique permutations of this multiset
            for p in set(permutations(mult)):
                nums.add(int(''.join(p)))

        arr = sorted(nums)
        for val in arr:
            if val > n:
                return val
        # (should never reach here for problem constraints)
        return -1

